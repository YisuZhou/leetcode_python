# 深度优先
class Solution:
    def combinationSum(self, candidates, target):
        """
        :type candidates: List[int]
        :type target: int
        :rtype: List[List[int]]
        """
        
        ans = []
        for i in candidates:
            self.comb_sum(ans,[i],i,candidates,target-i)

        return ans
    
    def comb_sum(self,ans,a,i,candidates,tar_left):
        if tar_left == 0:
            a.sort()
            if a not in ans:
                ans.append(a)
        else:
            for j in candidates:
                if tar_left-j >= min(min(candidates),0):
                    self.comb_sum(ans,a+[j],i+j,candidates,tar_left-j)
        
        
