class Solution:
    def spiralOrder(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: List[int]
        """
        if matrix == []:
            return []
        count = 0
        m = len(matrix)-1
        n = len(matrix[0])-1
        if not (m+1 and n+1):
            return []
        ans = []
        left = 0
        right = n
        top = 0
        bottom = m
        
        while count < (m+1)*(n+1):  # 每次都要判断count
            if count < (m+1)*(n+1):
                for i in range(left,right+1):
                    ans.append(matrix[top][i])
                    count += 1
                top += 1
            if count < (m+1)*(n+1):
                for j in range(top,bottom+1):
                    ans.append(matrix[j][right])
                    count += 1  
                right -= 1
            if count < (m+1)*(n+1):
                for p in range(right,left-1,-1):
                    ans.append(matrix[bottom][p])
                    count += 1
                bottom -= 1
            if count < (m+1)*(n+1):
                for q in range(bottom,top-1,-1):
                    ans.append(matrix[q][left])
                    count += 1
                left += 1
        
        return ans
                
            
